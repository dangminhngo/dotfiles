#!/bin/fish

function clamp
    set min $argv[1]
    set max $argv[2]
    set val $argv[3]
    python -c "print(max($min, min($val, $max)))"
end

function change-active
    set direction $argv[1]
    set current $argv[2]

    if test $direction = down
        set target (clamp 1 6 (math $current+1))
        hyprctl dispatch workspace $target
    else
        set target (clamp 1 6 (math $current-1))
        hyprctl dispatch workspace $target
    end
end

function get-active
    hyprctl monitors -j | jq --raw-output .[0].activeWorkspace.id
    socat -u UNIX-CONNECT:/tmp/hypr/$HYPRLAND_INSTANCE_SIGNATURE/.socket2.sock - | stdbuf -o0 grep '^workspace>>' | stdbuf -o0 awk -F '>>|,' '{print $2}'
end

function get
    function spaces
        set WORKSPACE_WINDOWS (hyprctl workspaces -j | jq 'map({key: .id | tostring, value: .windows}) | from_entries')
        seq 1 6 | jq --argjson windows "$WORKSPACE_WINDOWS" --slurp -Mc 'map(tostring) | map({id: ., windows: ($windows[.]//0)})'
    end

    spaces
    socat -u UNIX-CONNECT:/tmp/hypr/$HYPRLAND_INSTANCE_SIGNATURE/.socket2.sock - | while read -L
        spaces
    end
end

switch $argv[1]
    case change-active
        change-active
    case get-active
        get-active
    case get
        get
end
